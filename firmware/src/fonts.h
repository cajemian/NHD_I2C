/* ************************************************************************** */
/** Descriptive File Name

  @Company
    Company Name

  @File Name
    filename.h

  @Summary
    Brief description of the file.

  @Description
    Describe the purpose of this file.
 */
/* ************************************************************************** */

#ifndef _FONTS_H    /* Guard against multiple inclusion */
#define _FONTS_H


/* ************************************************************************** */
/* ************************************************************************** */
/* Section: Included Files                                                    */
/* ************************************************************************** */
/* ************************************************************************** */
#include "definitions.h"                // SYS function prototypes

/* Provide C++ Compatibility */
#ifdef __cplusplus
extern "C" {
#endif


    /* ************************************************************************** */
    /* ************************************************************************** */
    /* Section: Constants                                                         */
    /* ************************************************************************** */
    /* ************************************************************************** */
//#define SSD1305_INCLUDE_FONT_6x8
#define SSD1305_INCLUDE_FONT_7x10
    

    // *****************************************************************************
    // *****************************************************************************
    // Section: Data Types
    // *****************************************************************************
    // *****************************************************************************

typedef struct {
const uint8_t FontWidth;    /*!< Font width in pixels */
uint8_t FontHeight;   /*!< Font height in pixels */
const uint16_t *data; /*!< Pointer to data font data array */
} FontDef;
   
//Subtract by 32 to find your character
uint16_t Font5x8 [600] = {
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       //Space 32
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       //!
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       //"
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       //#
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       //$
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       //%
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       //&
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       //'
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       //(
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       //)
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       //*
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       //+
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       //,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       //-
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       //.
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // /
    0x007C, 0x008A, 0x0092, 0x00A2, 0x007C,       // 0 48
    0x0000, 0x0084, 0x00FE, 0x0080, 0x0000,       // 1
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // 2
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // 3
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // 4
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // 5
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // 6
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // 7
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // 8
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // 9
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // :
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // ;
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // <
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // =
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // >
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // ?
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // @
    0x01F8, 0x0024, 0x0022, 0x0024, 0x01F8,       // A 65
    0x01FC, 0x0124, 0x0124, 0x0124, 0x00D8,       // B
    0x00F8, 0x0104, 0x0104, 0x0104, 0x0088,       // C
    0x01FC, 0x0104, 0x0104, 0x0104, 0x00F8,       // D
    0x01FC, 0x0124, 0x0124, 0x0124, 0x0104,       // E
    0x01FC, 0x0024, 0x0024, 0x0024, 0x0004,       // F
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // G
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // H
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // I
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // J
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // K
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // L
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // M
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // N
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // O
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // P
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // Q
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // R
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // S
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // T
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // U
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // V
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // W
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // X
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // Y
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // Z
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // [
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // \ //  
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // ]
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // ^
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // _
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // `
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // a 97
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // b
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // c
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // d
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // e
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // f
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // g
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // h
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // i
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // j
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // k
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // l
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // m
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // n
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // o
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // p
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // q
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // r
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // s
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // t
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // u
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // v
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // w
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // x
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // y
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,       // z
    
};
    // *****************************************************************************
    // *****************************************************************************
    // Section: Interface Functions
    // *****************************************************************************
    // *****************************************************************************


    /* Provide C++ Compatibility */
#ifdef __cplusplus
}
#endif

#endif /* _EXAMPLE_FILE_NAME_H */

/* *****************************************************************************
 End of File
 */
